---
title: How to run DBA commands for Azure Managed Instance for Apache Cassandra
description: Learn how to run DBA commands 
author: TheovanKraay
ms.service: managed-instance-apache-cassandra
ms.topic: how-to
ms.date: 11/02/2021
ms.author: thvankra
ms.custom: ignite-fall-2021
---

# Run DBA Command for Azure Managed Instance for Apache Cassandra

# DBA command support
Azure Managed Instance for Apache Cassandra let's you run nodetool and
sstable commands for routine DBA administration. 

Warning: Some of these commands 
can destabilzie the cassandra cluster and should only be run carefully 
and after being tested in  on-production environment. Where possible
a `--dry-run` option should be deployed first

Microsoft cannot offer any SLA or support on issues with running commands
which alter the database configuration and/or tables.

Not all commands are supported and there are some limitations. For a list
of supported commands see (##)

# How to run a nodetool command
Azure Managed Instance for Apache Cassandra is using the following az 
cli command to run DBA commands:

    az managed-cassandra cluster invoke-command  --resource-group  <rg>   --cluster-name <cluster> --host <ip of data node> --command-name nodetool --arguments "<nodetool-subcommand>"="" "paramerter1"="" 

The particular subcommand needs to be in the --arguments section with an empty value.

Nodetool flags without a value are transmitted like "-h"="" and if they have a value like "-t"="value".

Here is an example
    
    az managed-cassandra cluster invoke-command  --resource-group  <rg>   --cluster-name <cluster> --host <ip of data node> --command-name nodetool --arguments "status"="" 

This will return a json like:
    
    {
        "commandErrorOutput": "",
        "commandOutput": "<result>",
        "exitCode": 0
    }

## How to run an sstable command

SStable commands require redawrite access to the cassandra data directory and the cassandra database to be stopped. To accomodate this two additional parameters need to be given:

    az managed-cassandra cluster invoke-command  --resource-group  <test-rg>   --cluster-name <test-cluster> --host 10.1.0.6 --cassandra-stop-start true --readwrite true  --command-name sstableutil --arguments "system"="peers"
    
    {
    "commandErrorOutput": "",
    "commandOutput": "Listing files...\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-CompressionInfo.db\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-Data.db\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-Digest.crc32\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-Filter.db\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-Index.db\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-Statistics.db\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-Summary.db\n/var/lib/cassandra/data/system/peers-37f71aca7dc2383ba70672528af04d4f/me-1-big-TOC.txt\n",
    "exitCode": 0
    }

## List of supported ssstable commands

For more information on each command please look at https://cassandra.apache.org/doc/latest/cassandra/tools/sstable/index.html

* sstableverify
* sstablescrub
* sstablemetadata
* sstablelevelreset
* sstableutil
* sstablesplit
* sstablerepairedset
* sstableofflinerelevel
* sstableexpiredblockers

## List of supported nodetool commands
For more information on each command please look at https://cassandra.apache.org/doc/latest/cassandra/tools/nodetool/nodetool.html

* status
* cleanup
* clearsnapshot
* compact
* compactionhistory
* compactionstats
* describecluster
* describering
* disableautocompaction
* disablehandoff
* disablehintsfordc
* drain
* enableautocompaction
* enablehandoff
* enablehintsfordc
* failuredetector
* flush
* garbagecollect
* gcstats
* getcompactionthreshold
* getcompactionthroughput
* getconcurrentcompactors
* getendpoints
* getinterdcstreamthroughput
* getlogginglevels
* getsstables
* getstreamthroughput
* gettimeout
* gettraceprobability
* gossipinfo
* info
* invalidatecountercache
* invalidatekeycache
* invalidaterowcache
* listsnapshots
* netstats
* pausehandoff
* proxyhistograms
* rangekeysample
* rebuild
* rebuild_index - for arguments use `"keyspace"="table indexname..."`
* refresh
* refreshsizeestimates
* reloadlocalschema
* replaybatchlog
* resetlocalschema
* resumehandoff
* ring
* scrub
* setcachecapacity - for argumemts use `"key-cache-capacity" = "<row-cache-capacity> <counter-cache-capacity>"`
* setcachekeystosave - for arguments use `"key-cache-keys-to-save":"<row-cache-keys-to-save> <counter-cache-keys-to-save>"`
* setcompactionthreshold - for arguments use `"<keyspace>"="<table> <minthreshold> <maxthreshold>`
* setcompactionthroughput
* setconcurrentcompactors
* sethintedhandoffthrottlekb
* setinterdcstreamthroughput
* setstreamthroughput
* settimeout
* settraceprobability
* statusbackup
* statusbinary
* statusgossip
* statushandoff
* stop
* tablehistograms
* tablestats
* toppartitions
* tpstats
* truncatehints
* verify
* version
* viewbuildstatus
