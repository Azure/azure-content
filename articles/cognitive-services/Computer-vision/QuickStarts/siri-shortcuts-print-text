---
title: "Quickstart: Extract printed text (OCR) - REST, Siri Shortcuts - Computer Vision"
titleSuffix: "Azure Cognitive Services"
description: In this quickstart, you extract printed text from an image using the Computer Vision API with Siri Shortcuts.
services: cognitive-services
author: armando-leal

ms.service: cognitive-services
ms.component: computer-vision
ms.topic: quickstart
ms.date: 11/2/2018
ms.author: armando-leal
---

# Quickstart: Extract printed text (OCR) using the REST API and Siri Shortcuts in Computer Vision

In this quickstart, you extract printed text with optical character recognition (OCR) from an image by using Computer Vision's REST API. With the [OCR](https://westcentralus.dev.cognitive.microsoft.com/docs/services/5adf991815e1060e6355ad44/operations/56f91f2e778daf14a499e1fc) method, you can detect printed text in an image and extract recognized characters into a machine-usable character stream.

If you don't have an Azure subscription, create a [free account](https://azure.microsoft.com/free/ai/?ref=microsoft.com&utm_source=microsoft.com&utm_medium=docs&utm_campaign=cognitive-services) before you begin.

## Prerequisites

- You must download [Siri Shortcuts app](https://itunes.apple.com/us/app/shortcuts/id915249334?mt=8)
- You must have a subscription key for Computer Vision. To get a subscription key, see [Obtaining Subscription Keys](../Vision-API-How-to-Topics/HowToSubscribe.md).

## Create  a new Shortcut
1. Start by adding a task for getting an Image into your flow, like “Select Photos”
2. Make sure your images are less than 4 MBs by resizing them using the “Resize Image” task
3. Convert image to one of the supported formats, like JPEG. This is necessary because otherwise images are sometimes sent with the new HEIC format, which is not supported by the API.
4. Add the URL for the OCR API
5. Use “Get Contents of URL” for posting image and getting back the OCR results
	* Expand the advanced panel for adding the azure key and content-type headers
	* Also add the the converted image as Request Body of type File
6. This request will return the extracted text


## Examine the response

A successful response is returned in JSON. The sample application parses and displays a successful response in the console window, similar to the following example:

```json
{
    "language": "en",
    "textAngle": -1.5000000000000335,
    "orientation": "Up",
    "regions": [
        {
            "boundingBox": "154,49,351,575",
            "lines": [
                {
                    "boundingBox": "165,49,340,117",
                    "words": [
                        {
                            "boundingBox": "165,49,63,109",
                            "text": "A"
                        },
                        {
                            "boundingBox": "261,50,244,116",
                            "text": "GOAL"
                        }
                    ]
                },
                {
                    "boundingBox": "165,169,339,93",
                    "words": [
                        {
                            "boundingBox": "165,169,339,93",
                            "text": "WITHOUT"
                        }
                    ]
                },
                {
                    "boundingBox": "159,264,342,117",
                    "words": [
                        {
                            "boundingBox": "159,264,64,110",
                            "text": "A"
                        },
                        {
                            "boundingBox": "255,266,246,115",
                            "text": "PLAN"
                        }
                    ]
                },
                {
                    "boundingBox": "161,384,338,119",
                    "words": [
                        {
                            "boundingBox": "161,384,86,113",
                            "text": "IS"
                        },
                        {
                            "boundingBox": "274,387,225,116",
                            "text": "JUST"
                        }
                    ]
                },
                {
                    "boundingBox": "154,506,341,118",
                    "words": [
                        {
                            "boundingBox": "154,506,62,111",
                            "text": "A"
                        },
                        {
                            "boundingBox": "248,508,247,116",
                            "text": "WISH"
                        }
                    ]
                }
            ]
        }
    ]
}
```

## Next steps
Explore a basic Siri Shortcut that uses Computer Vision to perform optical character recognition (OCR); create smart-cropped thumbnails; plus detect, categorize, tag, and describe visual features, including faces, in an image. To rapidly experiment with the Computer Vision APIs, try the [Open API testing console](https://westcentralus.dev.cognitive.microsoft.com/docs/services/5adf991815e1060e6355ad44/operations/56f91f2e778daf14a499e1fa/console).
